{"version":3,"sources":["yahtzee.js","index.js"],"names":["Yahtzee","sum","a","b","Ones","Twos","Threes","Fours","Fives","Sixes","Chance","roll","remainingRolls","indexes","index","dice","Math","floor","random","assign","category","assignments","Array","fill","_score","_upperBonus","_additionalYahtzees","_gameOver","gameOver","undefined","Object","values","every","upperBonus","score","additionalYahtzees","upper","lower","isAYahtzee","categoryScoring","hasYahtzee","entries","forEach","rolls","filter","reduce","slice","some","el","e","length","uniqueRolls","i","indexOf","matchedRolls","sortedRolls","sort","oneDeltaCount","acc","now","isArray","delta","customElements","define","HTMLElement","connectedCallback","categories","querySelector","querySelectorAll","categoryEl","dataset","addEventListener","event","target","yahtzee","healdDice","render","die","tagName","parentElement","toggleAttribute","startGame","map","heald","n","window","button","span","disabled","textContent","dieIndex","removeAttribute","setAttribute","yahtzeeCategorySpan","observedAttributes","slowSpin","getAnimations","animation","commitStyles","cancel","rotX","rotY","rotZ","slowSpinAnimation","animate","transform","duration","iterations","Infinity","innerHTML","attributeChangedCallback","name","oldValue","newValue","face","getAttribute","hasAttribute","delay","easing"],"mappings":"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","file":"src.e21a566e.js","sourceRoot":"../src","sourcesContent":["const sum = (a, b) => a + b;\n\nclass Yahtzee {\n  static categoryScoring = {\n    Ones: (rolls) => rolls.filter((roll) => roll === 1).reduce(sum, 0),\n    Twos: (rolls) => rolls.filter((roll) => roll === 2).reduce(sum, 0),\n    Threes: (rolls) => rolls.filter((roll) => roll === 3).reduce(sum, 0),\n    Fours: (rolls) => rolls.filter((roll) => roll === 4).reduce(sum, 0),\n    Fives: (rolls) => rolls.filter((roll) => roll === 5).reduce(sum, 0),\n    Sixes: (rolls) => rolls.filter((roll) => roll === 6).reduce(sum, 0),\n    \"Three of a Kind\": (rolls) => {\n      return rolls\n        .slice(0, -2)\n        .some((el, index) => rolls.filter((e) => e === el).length >= 3)\n        ? rolls.reduce(sum, 0)\n        : 0;\n    },\n    \"Four of a Kind\": (rolls) => {\n      return rolls\n        .slice(0, -3)\n        .some((el, index) => rolls.filter((e) => e === el).length >= 4)\n        ? rolls.reduce(sum, 0)\n        : 0;\n    },\n    \"Full House\": (rolls) => {\n      const uniqueRolls = rolls.filter((e, i, a) => a.indexOf(e) === i).length;\n      if (uniqueRolls !== 2) return 0;\n      const matchedRolls = rolls.filter((roll) => roll === rolls[0]).length;\n      if (matchedRolls === 2 || matchedRolls === 3) return 25;\n      return 0;\n    },\n    \"Small Straight\": (rolls) => {\n      const sortedRolls = [...rolls].sort();\n      const roleDeltas = sortedRolls.reduce((acc, now, index) => [\n        ...(Array.isArray(acc) ? acc : []),\n        now - sortedRolls[index - 1],\n      ]);\n      const oneDeltaCount = roleDeltas.filter((delta) => delta === 1).length;\n      return oneDeltaCount >= 3 ? 30 : 0;\n    },\n    \"Large Straight\": (rolls) => {\n      const sortedRolls = [...rolls].sort();\n      const roleDeltas = sortedRolls.reduce((acc, now, index) => [\n        ...(Array.isArray(acc) ? acc : []),\n        now - sortedRolls[index - 1],\n      ]);\n      const oneDeltaCount = roleDeltas.filter((delta) => delta === 1).length;\n      return oneDeltaCount === 4 ? 40 : 0;\n    },\n    Chance: (rolls) => rolls.reduce(sum, 0),\n    Yahtzee: (rolls) => {\n      const uniqueRolls = rolls.filter((e, i, a) => a.indexOf(e) === i);\n      return uniqueRolls.length === 1 && uniqueRolls[0] !== null ? 50 : 0;\n    },\n  };\n\n  assignments = {\n    Ones: null,\n    Twos: null,\n    Threes: null,\n    Fours: null,\n    Fives: null,\n    Sixes: null,\n    \"Three of a Kind\": null,\n    \"Four of a Kind\": null,\n    \"Full House\": null,\n    \"Small Straight\": null,\n    \"Large Straight\": null,\n    Chance: null,\n    Yahtzee: null,\n  };\n  dice = [null, null, null, null, null];\n  remainingRolls = 3;\n\n  roll(...indexes) {\n    if (this.remainingRolls === 0) return;\n\n    for (const index of indexes) {\n      this.dice[index] = Math.floor(Math.random() * 6) + 1;\n    }\n    this.remainingRolls--;\n  }\n\n  assign(category) {\n    if (this.assignments[category] || this.dice[0] === null) return;\n\n    this.assignments[category] = this.dice;\n    this.dice = new Array(5).fill(null);\n    this.remainingRolls = 3;\n    delete this._score;\n    delete this._upperBonus;\n    delete this._additionalYahtzees;\n    delete this._gameOver;\n  }\n\n  get gameOver() {\n    if (this._gameOver !== undefined) return this._gameOver;\n    this._gameOver = Object.values(this.assignments).every(\n      (dice) => dice !== null\n    );\n    return this._gameOver;\n  }\n\n  get upperBonus() {\n    if (this._upperBonus !== undefined) return this._upperBonus;\n    this.score;\n    return this._upperBonus;\n  }\n\n  get additionalYahtzees() {\n    if (this._additionalYahtzees !== undefined) return this._additionalYahtzees;\n    this.score;\n    return this._additionalYahtzees;\n  }\n\n  get score() {\n    if (this._score !== undefined) return this._score;\n\n    let upper = 0;\n    let lower = 0;\n    this._additionalYahtzees = 0;\n    const isAYahtzee = Yahtzee.categoryScoring[\"Yahtzee\"];\n    const hasYahtzee =\n      this.assignments[\"Yahtzee\"] &&\n      isAYahtzee(this.assignments[\"Yahtzee\"]) !== 0;\n\n    Object.entries(this.assignments).forEach(([category, dice], index) => {\n      if (!dice) return;\n      if (hasYahtzee && category !== \"Yahtzee\" && isAYahtzee(dice))\n        this._additionalYahtzees++;\n      const score = Yahtzee.categoryScoring[category](dice);\n      if (index < 6) upper += score;\n      else lower += score;\n    });\n    this._upperBonus = upper >= 63 ? 35 : 0;\n\n    this._score =\n      upper + this._upperBonus + lower + this._additionalYahtzees * 100;\n    return this._score;\n  }\n}\nexport default Yahtzee;\n","import Yahtzee from \"./yahtzee\";\n\n// Icon framework\n// ==============\n\n// {\n//   const img = document.querySelector(\"img\");\n//   function drawCanvases() {\n//     for (let canvas of document.querySelectorAll(\"canvas[data-size]\")) {\n//       canvas.width = canvas.height = canvas.dataset.size;\n//       const ctx = canvas.getContext(\"2d\");\n//       ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n//     }\n//   }\n//   img.onload = drawCanvases;\n//   if (img.complete && img.naturalHeight) drawCanvases();\n// }\n\n// new Worker(new URL(\"./worker.js\", import.meta.url), { type: \"module\" });\n\n// navigator.onLine === false\n// window.addEventListener(\"offline\", (e) => {});\n// window.addEventListener(\"online\", (e) => {});\n\n// navigator.serviceWorker.register(\n//   new URL(\"service-worker.js\", import.meta.url),\n//   { type: \"module\" }\n// );\n// navigator.serviceWorker.register(\"./service-worker.js\");\n\ncustomElements.define(\n  \"yahtzee-game\",\n  class extends HTMLElement {\n    // constructor() {\n    //   super();\n    //   // const shadowRoot =\n    //   // this.attachShadow({ mode: \"open\" });\n    // }\n    connectedCallback() {\n      const categories = this.querySelector(\".Categories\");\n      [...categories.querySelectorAll(\"[data-category]\")].forEach(\n        (categoryEl) => {\n          const button = categoryEl.querySelector(\"button\");\n          button.dataset.category = categoryEl.dataset.category;\n        }\n      );\n      categories.addEventListener(\"click\", (event) => {\n        const category = event.target.dataset.category;\n        if (!category) return;\n        this.yahtzee.assign(category);\n        this.healdDice = [false, false, false, false, false];\n        this.render();\n      });\n      this.querySelector(\".Dice\").addEventListener(\"click\", (event) => {\n        let die = event.target;\n        if (die.tagName !== \"YAHTZEE-DIE\") die = die.parentElement;\n        if (die.tagName !== \"YAHTZEE-DIE\") return;\n        const index = die.dataset.index;\n        if (this.yahtzee.dice[index] === null) return;\n        this.healdDice[index] = !this.healdDice[index];\n        die.toggleAttribute(\"heald\", this.healdDice[index]);\n      });\n      this.querySelector(\".Roll\").addEventListener(\"click\", (event) => {\n        if (this.yahtzee.gameOver) {\n          this.startGame();\n          return;\n        }\n        if (!this.yahtzee.remainingRolls) return;\n        this.yahtzee.roll(\n          ...this.healdDice\n            .map((heald, index) => (heald ? false : index))\n            .filter((n) => n !== false)\n        );\n        this.render();\n      });\n      this.startGame();\n    }\n    startGame() {\n      // FIXME: recover from storage\n      window.yahtzee = this.yahtzee = new Yahtzee();\n      this.healdDice = [false, false, false, false, false];\n      this.render();\n    }\n    render() {\n      [...this.querySelectorAll(\".Categories > [data-category]\")].forEach(\n        (categoryEl) => {\n          const category = categoryEl.dataset.category;\n          const rolls = this.yahtzee.assignments[category];\n          const button = categoryEl.querySelector(\"button\");\n          const span = categoryEl.querySelector(\"span\");\n          button.disabled = true;\n          if (rolls) {\n            span.textContent = Yahtzee.categoryScoring[category](rolls);\n          } else if (this.yahtzee.dice[0] !== null) {\n            button.disabled = false;\n            span.textContent = \"-\";\n          }\n        }\n      );\n      const dice = [...this.querySelectorAll(\".Dice > yahtzee-die\")];\n      dice.forEach((die, dieIndex) => {\n        die.toggleAttribute(\"heald\", this.healdDice[dieIndex]);\n\n        if (this.yahtzee.dice[dieIndex] === null) {\n          die.removeAttribute(\"face\");\n        } else if (!this.healdDice[dieIndex]) {\n          die.setAttribute(\"face\", this.yahtzee.dice[dieIndex]);\n        }\n      });\n      const roll = this.querySelector(\".Roll\");\n      if (this.yahtzee.gameOver) {\n        roll.textContent = \"New Game\";\n        roll.disabled = false;\n      } else {\n        roll.textContent = `Roll - ${this.yahtzee.remainingRolls}`;\n        roll.disabled = this.yahtzee.remainingRolls === 0;\n      }\n      this.querySelector(\".UpperBonus > span:last-child\").textContent =\n        this.yahtzee.upperBonus || \"-\";\n      if (this.yahtzee.additionalYahtzees) {\n        const yahtzeeCategorySpan = this.querySelector(\n          '.Categories > [data-category=\"Yahtzee\"] > span'\n        );\n        yahtzeeCategorySpan.textContent += \" + 100\";\n        if (this.yahtzee.additionalYahtzees > 1) {\n          yahtzeeCategorySpan.textContent += ` x${this.yahtzee.additionalYahtzees}`;\n        }\n      }\n      this.querySelector(\n        \".Score\"\n      ).textContent = `Total - ${this.yahtzee.score}`;\n    }\n  }\n);\n\ncustomElements.define(\n  \"yahtzee-die\",\n  class extends HTMLElement {\n    static get observedAttributes() {\n      return [\"face\", \"heald\"];\n    }\n    slowSpin() {\n      // const style = window.getComputedStyle(this, null);\n      // const transformation =\n      //   style.getPropertyValue(\"-webkit-transform\") ||\n      //   style.getPropertyPriority(\"-moz-transform\") ||\n      //   style.getPropertyPriority(\"-ms-transform\") ||\n      //   style.getPropertyPriority(\"-o-transform\") ||\n      //   style.getPropertyPriority(\"transform\");\n      // let x, y, z, angle;\n      // if (!transformation || !transformation.startsWith(\"matrix3d(\")) {\n      //   x = Math.random() - 0.5;\n      //   y = Math.random() - 0.5;\n      //   z = Math.random() - 0.5;\n      //   angle = 0; // Math.floor(Math.random() * 360);\n      // } else {\n      //   const [a, b, c, _a, d, e, f, _b, g, h, i, _c, _j, _k, _l, _d] =\n      //     transformation.slice(9, -1).split(\",\").map(parseFloat);\n      //   x = h - f;\n      //   y = c - g;\n      //   z = d - b;\n      //   angle = (Math.atan((a + e + h - 1) / 2) / Math.PI) * 180;\n      // }\n\n      // this.animate(\n      //   {\n      //     transform: `rotate3d(${x}, ${y}, ${z}, ${angle + 360}deg)`,\n      //   },\n      //   {\n      //     duration: 10000 + Math.random() * 3000,\n      //     iterations: Infinity,\n      //   }\n      // );\n      this.getAnimations().forEach((animation) => {\n        animation.commitStyles();\n        animation.cancel();\n      });\n      const rotX = Math.floor(Math.random() * 360);\n      const rotY = Math.floor(Math.random() * 360);\n      const rotZ = Math.floor(Math.random() * 360);\n      // this.style.transform = `rotateX(${rotX}deg) rotateY(${rotY}deg) rotateZ(${rotZ}deg)`;\n      this.slowSpinAnimation = this.animate(\n        [\n          {\n            transform: `rotateX(${rotX}deg) rotateY(${rotY}deg) rotateZ(${rotZ}deg)`,\n          },\n          {\n            transform: `rotateX(${\n              rotX + 360 * (Math.random() > 0.5 ? 1 : -1)\n            }deg) rotateY(${\n              rotY + 360 * (Math.random() > 0.5 ? 1 : -1)\n            }deg) rotateZ(${rotZ + 360 * (Math.random() > 0.5 ? 1 : -1)}deg)`,\n          },\n        ],\n        {\n          duration: 10000 + Math.random() * 3000,\n          iterations: Infinity,\n        }\n      );\n    }\n    connectedCallback() {\n      // console.log(\"connectedCallback\", this.isConnected);\n      this.innerHTML = `<div>1</div><div>2</div><div>3</div><div>4</div><div>5</div><div>6</div>`;\n\n      if (!this.slowSpinAnimation) this.slowSpin();\n    }\n    attributeChangedCallback(name, oldValue, newValue) {\n      // console.log(\"attributeChangedCallback\", name, oldValue, newValue);\n      const face = this.getAttribute(\"face\");\n      const heald = this.hasAttribute(\"heald\");\n      // console.log({ face, heald });\n      if (face === null) return; // this.slowSpin();\n\n      let rotX = 0,\n        rotY = 0,\n        rotZ = 0;\n\n      if (face === \"1\") {\n        // noop\n      } else if (face === \"2\") {\n        rotY = 180;\n      } else if (face === \"3\") {\n        rotY = -90;\n      } else if (face === \"4\") {\n        rotY = 90;\n      } else if (face === \"5\") {\n        rotX = -90;\n      } else if (face === \"6\") {\n        rotX = 90;\n      }\n      if (!heald) {\n        rotX += (Math.random() * 6 + 5) * (Math.random() > 0.5 ? 1 : -1);\n        rotY += (Math.random() * 6 + 5) * (Math.random() > 0.5 ? 1 : -1);\n        rotZ += (Math.random() * 6 + 5) * (Math.random() > 0.5 ? 1 : -1);\n      }\n\n      // this.getAnimations().forEach((animation) => {\n      //   animation.commitStyles();\n      //   // debugger;\n      //   animation.cancel();\n      //   // debugger;\n      // });\n      this.slowSpinAnimation.cancel();\n      let delay = 0;\n      if (name !== \"heald\") {\n        delay = 300 + Math.random() * 700;\n        this.animate(\n          {\n            transform: `rotateX(${rotX - 100}deg) rotateY(${\n              rotY - 100\n            }deg) rotateZ(${rotZ - 500}deg)`,\n          },\n          {\n            duration: delay,\n            easing: \"linear\",\n            fill: \"forwards\",\n          }\n        );\n      }\n      this.animate(\n        {\n          transform: `rotateX(${rotX}deg) rotateY(${rotY}deg) rotateZ(${rotZ}deg)`,\n        },\n        {\n          delay,\n          duration: name === \"heald\" ? 300 : 1000 + Math.random() * 1000,\n          easing: \"ease-out\",\n          fill: \"forwards\",\n        }\n      );\n    }\n  }\n);\n"]}